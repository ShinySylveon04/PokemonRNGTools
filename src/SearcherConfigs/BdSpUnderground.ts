import { isArray, isString } from '../Components/InputField';
import { calculatePokemon } from '../BdSp/Underground/Underground';
import type { SearcherConfig } from '../Layouts/ConfiguableSearcher';
import type { FieldGroup } from '../Components/FieldGroup';
import { formatIVs } from '../Utils/formatIVs';

const FIELD_GROUPS: FieldGroup[] = [
  {
    label: 'RNG Info',
    components: [
      {
        type: 'hex_number',
        id: 'seed_0',
        label: 'Seed 0',
        defaultValue: '',
      },
      {
        type: 'hex_number',
        id: 'seed_1',
        label: 'Seed 1',
        defaultValue: '',
      },
      {
        type: 'hex_number',
        id: 'seed_2',
        label: 'Seed 2',
        defaultValue: '',
      },
      {
        type: 'hex_number',
        id: 'seed_3',
        label: 'Seed 3',
        defaultValue: '',
      },
      {
        type: 'number',
        id: 'min_advances',
        defaultValue: '0',
        label: 'Min Advances',
      },
      {
        type: 'number',
        id: 'max_advances',
        defaultValue: '10000',
        label: 'Max Advances',
      },
      {
        type: 'number',
        id: 'delay',
        defaultValue: '0',
        label: 'Delay',
      },
      {
        type: 'number',
        id: 'statue_tiles',
        defaultValue: '0',
        label: 'Statue Tiles',
      },
      {
        type: 'select',
        id: 'room_size',
        defaultValue: 'Small',
        label: 'Room Size',
        options: [
          { label: 'Small', value: 'Small' },
          { label: 'Large', value: 'Large' },
        ],
      },
      {
        type: 'checkbox',
        id: 'diglett_boost',
        label: 'Diglett Boost',
        defaultValue: 'false',
      },
    ],
  },
  {
    label: 'Filters',
    components: [
      {
        type: 'select',
        id: 'shiny',
        defaultValue: '4',
        label: 'Shiny',
        options: [
          { label: 'Any', value: '4' },
          { label: 'Star', value: '1' },
          { label: 'Square', value: '2' },
          { label: 'Star/Square', value: '3' },
        ],
      },
      {
        type: 'multiselect',
        id: 'nature',
        defaultValue: '25',
        label: 'Nature',
        options: [
          { label: 'Any', value: '25' },
          { label: 'Hardy', value: '0' },
          { label: 'Lonely', value: '1' },
          { label: 'Brave', value: '2' },
          { label: 'Adamant', value: '3' },
          { label: 'Naughty', value: '4' },
          { label: 'Bold', value: '5' },
          { label: 'Docile', value: '6' },
          { label: 'Relaxed', value: '7' },
          { label: 'Impish', value: '8' },
          { label: 'Lax', value: '9' },
          { label: 'Timid', value: '10' },
          { label: 'Hasty', value: '11' },
          { label: 'Serious', value: '12' },
          { label: 'Jolly', value: '13' },
          { label: 'Naive', value: '14' },
          { label: 'Modest', value: '15' },
          { label: 'Mild', value: '16' },
          { label: 'Quiet', value: '17' },
          { label: 'Bashful', value: '18' },
          { label: 'Rash', value: '19' },
          { label: 'Calm', value: '20' },
          { label: 'Gentle', value: '21' },
          { label: 'Sassy', value: '22' },
          { label: 'Careful', value: '23' },
          { label: 'Quirky', value: '24' },
        ],
      },
      {
        type: 'select',
        id: 'ability',
        defaultValue: '3',
        label: 'Ability',
        options: [
          { label: 'Any', value: '3' },
          { label: '0', value: '0' },
          { label: '1', value: '1' },
        ],
      },
      {
        type: 'select',
        id: 'encounter_slot',
        defaultValue: '12',
        label: 'Encounter Slot',
        options: [
          { label: 'Any', value: '12' },
          { label: '0', value: '0' },
          { label: '1', value: '1' },
          { label: '2', value: '2' },
          { label: '3', value: '3' },
          { label: '4', value: '4' },
          { label: '5', value: '5' },
          { label: '6', value: '6' },
          { label: '7', value: '7' },
          { label: '8', value: '8' },
          { label: '9', value: '9' },
          { label: '10', value: '10' },
          { label: '11', value: '11' },
        ],
      },
      {
        type: 'select',
        id: 'gender_ratio',
        defaultValue: '256',
        label: 'Gender Ratio',
        options: [
          { label: 'No Set Gender', value: '256' },
          { label: 'Genderless', value: '255' },
          { label: '50% ♂ / 50% ♀', value: '127' },
          { label: '25% ♂ / 75% ♀', value: '191' },
          { label: '75% ♂ / 25% ♀', value: '63' },
          { label: '87.5% ♂ / 12.5% ♀', value: '31' },
          { label: '100% ♂', value: '0' },
          { label: '100% ♀', value: '254' },
        ],
      },
      {
        type: 'select',
        id: 'gender',
        defaultValue: '256',
        label: 'Gender',
        options: [
          { label: 'Any', value: '256' },
          { label: '♂', value: '0' },
          { label: '♀', value: '254' },
        ],
      },
      {
        type: 'label',
        id: 'min_ivs',
        label: 'Min IVs',
      },
      {
        type: 'number',
        id: 'min_hp_iv',
        label: 'HP',
        defaultValue: '0',
        size: 'small',
      },
      {
        type: 'number',
        id: 'min_atk_iv',
        label: 'Attack',
        defaultValue: '0',
        size: 'small',
      },
      {
        type: 'number',
        id: 'min_def_iv',
        label: 'Defense',
        defaultValue: '0',
        size: 'small',
      },
      {
        type: 'number',
        id: 'min_spa_iv',
        label: 'Special Attack',
        defaultValue: '0',
        size: 'small',
      },
      {
        type: 'number',
        id: 'min_spd_iv',
        label: 'Special Defense',
        defaultValue: '0',
        size: 'small',
      },
      {
        type: 'number',
        id: 'min_spe_iv',
        label: 'Speed',
        defaultValue: '0',
        size: 'small',
      },

      {
        type: 'label',
        id: 'max_ivs',
        label: 'Max IVs',
      },
      {
        type: 'number',
        id: 'max_hp_iv',
        label: 'HP',
        defaultValue: '31',
        size: 'small',
      },
      {
        type: 'number',
        id: 'max_atk_iv',
        label: 'Attack',
        defaultValue: '31',
        size: 'small',
      },
      {
        type: 'number',
        id: 'max_def_iv',
        label: 'Defense',
        defaultValue: '31',
        size: 'small',
      },
      {
        type: 'number',
        id: 'max_spa_iv',
        label: 'Special Attack',
        defaultValue: '31',
        size: 'small',
      },
      {
        type: 'number',
        id: 'max_spd_iv',
        label: 'Special Defense',
        defaultValue: '31',
        size: 'small',
      },
      {
        type: 'number',
        id: 'max_spe_iv',
        label: 'Speed',
        defaultValue: '31',
        size: 'small',
      },
    ],
  },
];

export const BDSP_UNDERGROUND_CONFIG: SearcherConfig = {
  getFieldGroups: () => FIELD_GROUPS,
  getResultColumns: () => [
    'Advances',
    'Shiny',
    'Slot',
    'Nature',
    'Ability',
    'Gender',
    'IVs',
    'PID',
    'EC',
  ],
  generateResults: async values => {
    const results = await calculatePokemon(
      values.seed_0,
      values.seed_1,
      values.seed_2,
      values.seed_3,
      values.shiny,
      values.min_advances,
      values.max_advances,
      values.delay,
      isArray(values.nature) ? values.nature.map(num => parseInt(num, 10)) : [],
      isString(values.ability) ? parseInt(values.ability, 10) : 0,
      isString(values.encounter_slot) ? parseInt(values.encounter_slot, 10) : 0,
      isString(values.gender_ratio) ? parseInt(values.gender_ratio, 10) : 0,
      isString(values.gender) ? parseInt(values.gender) : 0,
      isString(values.statue_tiles) ? parseInt(values.statue_tiles, 10) : 0,
      values.room_size === 'Large',
      values.diglett_boost,
      [
        values.min_hp_iv,
        values.min_atk_iv,
        values.min_def_iv,
        values.min_spa_iv,
        values.min_spd_iv,
        values.min_spe_iv,
      ],
      [
        values.max_hp_iv,
        values.max_atk_iv,
        values.max_def_iv,
        values.max_spa_iv,
        values.max_spd_iv,
        values.max_spe_iv,
      ],
    );

    return results.map(result => {
      return [
        result.advances,
        result.shiny_value,
        result.encounter === 0 ? 'Rare' : result.encounter,
        result.nature,
        result.ability === 'Ability0' ? 0 : 1,
        result.gender === 'Male' ? '♂' : '♀',
        formatIVs(result.ivs),
        result.pid.toString(16),
        result.ec.toString(16),
      ];
    });
  },
};
